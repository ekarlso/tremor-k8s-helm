# Copyright 2020-2021, The Tremor Team
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# templates/daemonset.yaml
#
# This chart creates a daemonset that will run a tremor instance
# Tremor is an early stage event processing system for unstructured
# data with rich support for structural pattern matching, filtering
#
# @author Njegos Railic
# @copyright 2020-2021, The Tremor Team 
#

{{- if eq .Values.kind "DaemonSet" }}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ template "tremor.fullname" . }}
  labels:
    app: {{ template "tremor.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: tremor
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "tremor.fullname" . }}
      component: tremor
  updateStrategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
  template:
    metadata:
      labels:
        app: {{ template "tremor.fullname" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        component: tremor
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ tpl (toYaml .Values.files) . | sha256sum }}
    spec:
      serviceAccountName: {{ template "tremor.fullname" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      hostNetwork: {{ .Values.hostNetwork }}
      containers:
        - name: tremor
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          volumeMounts:
            - name: config
              mountPath: /etc/tremor/config
              readOnly: true
          {{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 12}}
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      {{- if .Values.extraContainers }}
{{ toYaml .Values.extraContainers | indent 8}}
      {{- end }}
      {{- if .Values.extraInitContainers }}
      initContainers:
{{ toYaml .Values.extraInitContainers | indent 8}}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "tremor.fullname" . }}-config
      {{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8}}
      {{- end }}
{{- end }}
